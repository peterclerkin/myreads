{"version":3,"sources":["BooksAPI.js","Book.js","SearchBook.js","BookShelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Book","value","this","props","sendShelfChange","book","bookCover","_this","imageLinks","smallThumbnail","style","width","height","backgroundImage","concat","react_default","a","createElement","className","shelf","onChange","event","handleChange","target","disabled","title","authors","join","Component","SearchBook","state","books","query","_this2","fetch","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","BooksAPI","error","setState","checkForShelfs","map","i","shelfedBooks","length","id","_this3","Link","to","type","placeholder","fetchBooks","index","src_Book","key","BookShelf","item","BooksApp","filter","_this4","Route","exact","path","render","_ref","history","src_BookShelf","handleShelfChange","_ref2","src_SearchBook","React","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b92ddf6e.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\n\nclass Book extends Component {\n    handleChange(value) {\n        this.props.sendShelfChange(this.props.book, value);\n    }\n\n    render() {\n        let bookCover\n        if (!!this.props.book.imageLinks) {\n            bookCover = this.props.book.imageLinks.smallThumbnail;\n        } else {\n            bookCover = \"url('http://via.placeholder.com/128x193')\";\n        }\n        const style = {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${bookCover})`\n        }\n\n        return (\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\" style={style}></div>\n                        <div className=\"book-shelf-changer\">\n                            <select\n                                value={this.props.book.shelf || \"none\"}\n                                onChange={(event) => this.handleChange(event.target.value)} >\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"book-title\">{this.props.book.title}</div>\n                    <div className=\"book-authors\">{this.props.book.authors ? this.props.book.authors.join(', ') : ''}</div>\n                </div>\n            </li>\n        )\n\n    }\n\n}\n\nexport default Book","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport Book from './Book'\n\nclass SearchBook extends Component {\n    state = {\n        books:[]\n    };\n\n    sendShelfChange(book, shelf) {\n        this.props.sendShelfChange(book, shelf)\n    }\n\n    fetchBooks(query) {\n        if (!!query) {\n            BooksAPI.search(query).then(data => {\n                if (!!data.error) {\n                    this.setState({\n                        books:[]\n                    });\n                } else {\n                    let checkForShelfs = data.map(book => {\n                        for (var i = 0; i < this.props.shelfedBooks.length; i++) {\n                            if (this.props.shelfedBooks[i].id === book.id) {\n                                book.shelf = this.props.shelfedBooks[i].shelf;\n                            }\n                        }\n                        return book;\n                    })\n                    this.setState({\n                        books: checkForShelfs\n                    })\n                }\n            })\n        }\n    }\n\n    render(){\n        const {books} = this.state;\n\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\">Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input type=\"text\" placeholder=\"Search by title or author\" onChange={(event) => this.fetchBooks(event.target.value)} />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                    {\n                        books.length !== 0 && books.map((book, index) =>(\n                            <Book key={index} book={book} sendShelfChange={(book, shelf) => {this.sendShelfChange(book, shelf)}}/>\n                        ))\n                    }\n                    </ol>\n                </div>\n            </div>\n\n        )\n\n    }\n}\n\nexport default SearchBook\n","import React, { Component } from 'react'\nimport Book from './Book'\n\nclass BookShelf extends Component {\n    sendShelfChange(book, shelf) {\n        this.props.sendShelfChange(book, shelf)\n    }\n\n    render() {\n        if (this.props.books.length === 0) {\n            return null;\n        }\n\n        return (\n            <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">{this.props.title}</h2>\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                    {\n                        this.props.books.length > 0 && this.props.books.map((item) => (\n                            <Book key={item.id} book={item} sendShelfChange={(book, shelf) => {this.sendShelfChange(book, shelf)} } />\n                        ))\n                    }\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BookShelf","import React from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport SearchBook from './SearchBook'\nimport BookShelf from './BookShelf';\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then(data => this.setState({\n        books: data\n      }))\n  }\n\n  handleShelfChange(book, shelf) {\n    BooksAPI.update(book, shelf)\n      .then(() => {\n        book.shelf = shelf;\n        this.setState(state => ({\n          books: state.books.filter(item => item.id !== book.id).concat([book])\n        }))\n      })\n  }\n\n\n  render() {\n    if (this.state.books.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"app\">\n        <Route exact path='/' render={({ history }) => (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <BookShelf title=\"Currently Reading\"\n                  books={\n                    this.state.books.filter(item => item.shelf === 'currentlyReading')\n                  }\n                  sendShelfChange={(book, shelf) => { this.handleShelfChange(book, shelf) }}\n                />\n\n                <BookShelf title=\"Want to Read\"\n                  books={\n                    this.state.books.filter(item => item.shelf === 'wantToRead')\n                  }\n                  sendShelfChange={(book, shelf) => { this.handleShelfChange(book, shelf) }}\n                />\n\n                <BookShelf title=\"Read\"\n                  books={\n                    this.state.books.filter(item => item.shelf === 'read')\n                  }\n                  sendShelfChange={(book, shelf) => { this.handleShelfChange(book, shelf) }}\n                />\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to='/search'>Add a book</Link>\n            </div>\n          </div>\n        )}\n        />\n\n        <Route path='/search' render={({ history }) => (\n          <SearchBook\n            sendShelfChange={(book, shelf) => { this.handleShelfChange(book, shelf) }}\n            shelfedBooks={this.state.books} />\n        )}\n        />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}